var Browser=function(e){"use strict";const s={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w\/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-\.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:e=>e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:e=>null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%d trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:e=>null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))? (\S*)(?: (\S*))?/,names:["value","direction","uri","config"],format:e=>`extmap:%d${e.direction?"/%s":"%v"} %s${e.config?" %s":""}`},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:e=>null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format(e){let s="candidate:%s %d %s %d %s %d typ %s";return s+=null!=e.raddr?" raddr %s rport %d":"%v%v",s+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(s+=" generation %d"),s+=null!=e["network-id"]?" network-id %d":"%v",s+=null!=e["network-cost"]?" network-cost %d":"%v",s}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,names:["id","attribute","value"],format(e){let s="ssrc:%d";return null!=e.attribute&&(s+=" %s",null!=e.value&&(s+=":%s")),s}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_\/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:e=>null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{name:"content",reg:/^content:([^\s]*)/,format:"content:%s"},{name:"label",reg:/^label:([\d]*)/,format:"label:%d"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:e=>e.params?"rid:%s %s %s":"rid:%s %s"},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:e=>`imageattr:%s %s %s${e.dir2?" %s %s":""}`},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:e=>`simulcast:%s %s${e.dir2?" %s %s":""}`},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{name:"sourceFilter",reg:/^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,names:["filterMode","netType","addressTypes","destAddress","srcList"],format:"source-filter: %s %s %s %s %s"},{push:"invalid",names:["value"]}]};function r(e){return String(Number(e))===e?Number(e):e}function t(e,s,t){const a=e.name&&e.names;e.push&&!s[e.push]?s[e.push]=[]:a&&!s[e.name]&&(s[e.name]={});const n=e.push?{}:a?s[e.name]:s;!function(e,s,t,a){if(a&&!t)s[a]=r(e[1]);else for(let a=0;a<t.length;a+=1)null!=e[a+1]&&(s[t[a]]=r(e[a+1]))}(t.match(e.reg),n,e.names,e.name),e.push&&s[e.push].push(n)}Object.keys(s).forEach(e=>{s[e].forEach(e=>{e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")})});const a=RegExp.prototype.test.bind(/^([a-z])=(.*)/);function n(e){const r=[],n={media:r};let m=n;return e.split(/(\r\n|\r|\n)/).filter(a).forEach(e=>{const a=e[0],n=e.slice(2);"m"===a&&(r.push({rtp:[],fmtp:[]}),m=r[r.length-1]);for(let e=0;e<(s[a]||[]).length;e+=1){const r=s[a][e];if(r.reg.test(n))return void t(r,m,n)}}),n.media=r,n}function m(e,s){const t=s.split(/=(.+)/,2);return 2===t.length&&(e[t[0]]=r(t[1])),e}function o(e){return e.split(/\;\s?/).reduce(m,{})}const i=o;function p(e){return e.split(" ").map(Number)}function d(e){const s=[],t=e.split(" ").map(r);for(let e=0;e<t.length;e+=3)s.push({component:t[e],ip:t[e+1],port:t[e+2]});return s}function c(e){return e.split(" ").map(e=>e.substring(1,e.length-1).split(",").reduce(m,{}))}function u(e){return e.split(";").map(e=>e.split(",").map(e=>{let s,t=!1;return"~"!==e[0]?s=r(e):(s=r(e.substring(1,e.length)),t=!0),{scid:s,paused:t}}))}const l=/%[sdv%]/g,f=function(e,s,r){const t=`${e}=${s.format instanceof Function?s.format(s.push?r:r[s.name]):s.format}`,a=[];if(s.names)for(let e=0;e<s.names.length;e+=1){const t=s.names[e];s.name?a.push(r[s.name][t]):a.push(r[s.names[e]])}else a.push(r[s.name]);return function(e,...s){let r=0;const t=s.length;return e.replace(l,e=>{if(r>=t)return e;const a=s[r];switch(r+=1,e){case"%%":return"%";case"%s":return String(a);case"%d":return Number(a);case"%v":return"";default:return a}})}(t,...a)},g=["v","o","s","i","u","e","p","c","b","t","r","z","a"],h=["i","c","b","a"];function S(e,r){r=r||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach(e=>{null==e.payloads&&(e.payloads="")});const t=r.outerOrder||g,a=r.innerOrder||h,n=[];return t.forEach(r=>{s[r].forEach(s=>{s.name in e&&null!=e[s.name]?n.push(f(r,s,e)):s.push in e&&null!=e[s.push]&&e[s.push].forEach(e=>{n.push(f(r,s,e))})})}),e.media.forEach(e=>{n.push(f("m",s.m[0],e)),a.forEach(r=>{s[r].forEach(s=>{s.name in e&&null!=e[s.name]?n.push(f(r,s,e)):s.push in e&&null!=e[s.push]&&e[s.push].forEach(e=>{n.push(f(r,s,e))})})})}),`${n.join("\r\n")}\r\n`}var y={write:S,parse:n,parseFmtpConfig:i,parseRemoteCandidates:d,parseParams:o,parsePayloads:p,parseImageAttributes:c,parseSimulcastStreamList:u};return e.default=y,e.paramReducer=m,e.parse=n,e.parseFmtpConfig=i,e.parseImageAttributes=c,e.parseParams=o,e.parsePayloads=p,e.parseReg=t,e.parseRemoteCandidates=d,e.parseSimulcastStreamList=u,e.write=S,e}({});
